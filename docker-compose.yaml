---
version: '3.8'
services:

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    ports:
      - "5432:5432"
    volumes:
      - diploma_pg_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      timeout: 3s
      retries: 10
      interval: 3s

  api:
    build: .
    env_file:
      - deploy/.env
    environment:
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8000:8000
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./todolist:/code/todolist/
      - ./apps:/code/apps/

  bot:
    build: .
    env_file:
      - deploy/.env
    environment:
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_started
    command: python3 manage.py runbot


  frontend:
    image: sermalenk/skypro-front:lesson-38
    ports:
      - 80:80
    depends_on:
      api:
        condition: service_started

volumes:
  diploma_pg_data: